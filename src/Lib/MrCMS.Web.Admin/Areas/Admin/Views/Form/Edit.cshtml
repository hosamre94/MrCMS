@using MrCMS.Web.Admin.Models
@using MrCMS.Web.Admin.Services
@inject IGetEditTabsService TabsService
@model MrCMS.Entities.Documents.Web.Form
@{
    ViewBag.Title = "Edit | " + Model.Name;
    var tabs = await TabsService.GetEditTabs(Html, Model);
}

<form asp-controller="Form" asp-action="Edit" method="post" data-are-you-sure="@await Html.Resource(AdminMessages.AreYouSureDefaultMessage)">

    <admin-header>
        <row>
            <admin-header-title title="@await Html.Resource("admin-edit-form", "Edit Form") "/>

            <admin-header-actions>
                <a asp-action="Index" class="btn btn-dark">
                    <i class="icon ti ti-arrow-back"></i>
                    @await Html.Resource("admin-back", "Back")
                </a>
                <button type="submit" class="btn-primary btn">
                    <i class="icon ti ti-device-floppy"></i>
                    @await Html.Resource("admin-save", "Save")
                </button>
            </admin-header-actions>
        </row>
    </admin-header>


    <div asp-validation-summary="All"></div>

    <div class="form-floating mb-3">
        @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
        @Html.LabelFor(model => model.Name)
    </div>

    <div class="card-tabs">
        <ul class="nav nav-tabs" role="tablist" data-stickytabs="form-@Model.Id">
            @foreach (var tab in tabs)
            {
                ViewData["is-first"] = tab == tabs.First();
                <partial name="Tab" model="tab" view-data="ViewData"/>
            }
        </ul>

        <div class="tab-content">
            @foreach (var tab in tabs)
            {
                ViewData["is-first"] = tab == tabs.First();
                <partial name="TabContent" model="tab" view-data="ViewData"/>
            }
        </div>
    </div>

</form>