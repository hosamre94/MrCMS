@using System.Linq
@using MrCMS.ACL.Rules
@using MrCMS.Entities.People
@using MrCMS.Services
@using MrCMS.Web.Admin.Services
@model MrCMS.Web.Admin.Models.UpdateUserModel
@inject IGetEditTabsService EditTabsService
@inject IGetCurrentUser GetCurrentUser
@{
    var user = ViewData["user"] as User;
    ViewBag.Title = "Edit | " + user.Name;
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var onlyAdmin = Convert.ToBoolean(ViewData["OnlyAdmin"]);
    var userRoles = (ViewData["AvailableRoles"] as IEnumerable<UserRole> ?? Enumerable.Empty<UserRole>()).ToList();
    var cultureOptions = ViewData["culture-options"] as List<SelectListItem> ?? new List<SelectListItem>();
    var tabs = await EditTabsService.GetEditTabs(Html, user);

    var avatarImg = !string.IsNullOrEmpty(user.AvatarImage) ? user.AvatarImage : "https://via.placeholder.com/160";
}

<form asp-controller="User" asp-action="Edit" asp-route-id="@Model.Id" method="post" id="edit-user">
    <div class="row">
        <div class="col-md-8">
            <card class="mb-3">
                <card-body class="pb-0">
                    <div class="d-flex flex-wrap flex-sm-nowrap mb-6">
                        <div class="flex-shrink-0 me-3 mb-4 d-flex flex-column">
                            <img class="rounded" src="@avatarImg" alt="image">
                            <div class="btn-group mt-2">
                                @{
                                    var currentUser = await GetCurrentUser.Get();
                                    if (Model.Id == currentUser.Id)
                                    {
                                        <a class="text-center btn btn-sm btn-outline-secondary" asp-controller="Logout" asp-action="Logout">@await Html.Resource("admin-logout", "Logout")</a>
                                    }
                                }
                                <a class="text-center btn btn-sm btn-outline-primary" asp-controller="UserAvatar" asp-action="Set" asp-route-id="@Model.Id">Edit Avatar</a>
                            </div>
                        </div>
                        <div class="flex-fill">
                            <div class="d-flex flex-grow-1 flex-xxl-row flex-column-reverse justify-content-between align-items-center mb-2">
                                <h2 class="align-self-xxl-auto align-self-start m-0">@user.Email</h2>
                                <div class="align-self-xxl-auto align-self-start mb-1">
                                    <a asp-action="Index" class="btn btn-dark">
                                        <i class="icon ti ti-arrow-back"></i>
                                        @await Html.Resource("admin-back", "Back")
                                    </a>
                                    <a href="@Url.Action("SetPassword", "User", new { id = Model.Id })" class="btn btn-teal" data-toggle="fb-modal" data-fb-size="sm">
                                        <i class="icon ti ti-asterisk"></i>
                                        @await Html.Resource("Admin User Reset Password", "Reset Password")
                                    </a>

                                    @if (!onlyAdmin)
                                    {
                                        <a href="@Url.Action("Delete", "User", new { id = Model.Id })" class="btn btn-danger" data-toggle="fb-modal">
                                            @await Html.Resource("Delete")
                                        </a>
                                    }
                                    <button class="btn btn-primary">
                                        <i class="icon ti ti-device-floppy"></i>
                                        @await Html.Resource("admin-save", "Save")
                                    </button>
                                </div>
                            </div>
                            <dl class="row">
                                <dt class="col-xxl-2 col-xl-3 col-4">@await Html.Resource("Admin Full Name", "Full Name"):</dt>
                                <dd class="col-xxl-10 col-xl-9 col-8">@user.Name</dd>
                                <dt class="col-xxl-2 col-xl-3 col-4">@await Html.Resource("Roles", "Admin Roles"):</dt>
                                <dd class="col-xxl-10 col-xl-9 col-8">
                                    @foreach (var role in user.Roles)
                                    {
                                        <span class="badge bg-teal-lt">@role.Name</span>
                                    }
                                </dd>
                                <dt class="col-xxl-2 col-xl-3 col-4">@await Html.Resource("Created On"):</dt>
                                <dd class="col-xxl-10 col-xl-9 col-8">@user.CreatedOn.ToString("dd-MM-yyyy hh:mm tt")</dd>
                                <dt class="col-xxl-2 col-xl-3 col-4">@await Html.Resource("Updated On"):</dt>
                                <dd class="col-xxl-10 col-xl-9 col-8">@user.UpdatedOn.ToString("dd-MM-yyyy hh:mm tt")</dd>
                            </dl>
                        </div>
                    </div>
                    <ul class="nav nav-tabs border-bottom-0" data-bs-toggle="tabs" data-stickytabs="user-@Model.Id">
                        <li class="nav-item">
                            <a href="#tab-user-profile" class="nav-link active" data-bs-toggle="tab">
                                <i class="ti ti-home-2 me-2"></i>
                                @await Html.Resource("Admin Profile", "Profile")
                            </a>
                        </li>
                        @if (tabs.Any())
                        {
                            ViewData["user"] = user;
                            @foreach (var tab in tabs)
                            {
                                ViewData["is-first"] = false;
                                <partial name="Tab" model="tab" view-data="ViewData"/>
                            }
                        }
                    </ul>
                </card-body>
            </card>
            <card>
                <div class="tab-content">
                    <div class="tab-pane active show" id="tab-user-profile">
                        <div class="card-header">
                            <div class="card-title">
                                @await Html.Resource("Basic Info")
                            </div>
                        </div>
                        @Html.HiddenFor(x => x.Id)
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group mb-3">
                                        @Html.LabelFor(x => x.Email, new { @class = "form-label" })
                                        @Html.TextBoxFor(x => x.Email, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.Email)
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group mb-3">
                                        @Html.LabelFor(x => x.UICulture, new { @class = "form-label" })
                                        @Html.DropDownListFor(x => x.UICulture, cultureOptions, new { @class = "form-select" })
                                        @Html.ValidationMessageFor(x => x.UICulture)
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group mb-3">
                                        @Html.LabelFor(x => x.FirstName, new { @class = "form-label" })
                                        @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.FirstName)
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group mb-3">
                                        @Html.LabelFor(x => x.LastName, new { @class = "form-label" })
                                        @Html.TextBoxFor(x => x.LastName, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.LastName)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    @foreach (var tab in tabs)
                    {
                        ViewData["is-first"] = false;
                        <partial name="Content" model="tab" view-data="ViewData"/>
                    }
                </div>
            </card>
        </div>
        <div class="col-md-4">
            <card class="mb-3">
                <card-body>
                    <label class="form-label">@await Html.Resource("Admin User Roles", "Roles")</label>
                    <div class="form-selectgroup form-selectgroup-boxes">
                        @if (userRoles.Any() && await Html.CanAccess<UserACL>(UserACL.Roles))
                        {
                            for (var index = 0; index < userRoles.Count; index++)
                            {
                                var role = userRoles[index];
                                var isChecked = user.Roles.Any(x => x.Id == role.Id);

                                <label class="form-selectgroup-item">
                                    <input type="checkbox" name="Role-@role.Id" class="form-selectgroup-input" @(isChecked ? "checked" : "") value="true">
                                    <div class="form-selectgroup-label d-flex align-items-center p-3">
                                        <div class="me-3">
                                            <span class="form-selectgroup-check"></span>
                                        </div>
                                        <div class="form-selectgroup-label-content d-flex align-items-center">
                                            @role.Name
                                        </div>
                                    </div>
                                    <input type="hidden" name="Role-@role.Id" value="false"/>
                                </label>
                            }
                        }
                        else
                        {
                            <p>@await Html.Resource("Admin User Roles None", "You do not have access to administer roles").</p>
                        }
                    </div>
                </card-body>
            </card>
            <card class="mb-3">
                <card-body>
                    <label class="form-label">@await Html.Resource("Admin Notifications")</label>
                    @Html.InlineCheckboxFor(x => x.DisableNotifications, null, null, "Disable system notifications")
                </card-body>
            </card>
            <card>
                <card-body>
                    <label class="form-label">@await Html.Resource("User Status")</label>
                    @Html.InlineCheckboxFor(x => x.IsActive, null, null)
                </card-body>
            </card>
        </div>
    </div>
</form>