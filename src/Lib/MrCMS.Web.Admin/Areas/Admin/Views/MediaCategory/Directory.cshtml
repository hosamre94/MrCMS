@using System.Drawing
@using MrCMS.Web.Admin.Helpers
@using MrCMS.Web.Admin.Services
@using X.PagedList.Mvc.Core
@model MrCMS.Web.Admin.Models.MediaCategorySearchModel
@inject IFileAdminService FileAdminService
@{
    var files = await FileAdminService.GetFilesForFolder(Model);
}

<div class="row g-2" id="file-list" data-file-list="true" data-category-id="@(Model == null ? (int?)null : Model.Id)">
    @if (files != null && files.Any())
    {
        foreach (var file in files)
        {
            <div class="col-xl-2 col-md-3 col-4">
                <div class="d-flex flex-column">
                    <label class="file form-imagecheck d-block">
                        <input type="checkbox" value="1" class="form-imagecheck-input" data-id="file-@file.Id" data-type="file"/>
                        @if (file.IsImage())
                        {
                            <span class="form-imagecheck-figure ratio ratio-4x3">
                                @await Html.RenderImage(file.FileUrl, new Size(250, 250), file.FileName, attributes: new { @class = "w-100 img-fluid form-imagecheck-image" })
                                <div class="form">
                                </div>
                            </span>
                        }
                        else
                        {
                            <span class="form-imagecheck-figure ratio ratio-4x3">
                                <div class="d-flex flex-column">
                                    <img class="w-25 m-auto" src="@file.FileExtension.GetFileImage()" alt="File"/>
                                </div>
                            </span>
                        }
                    </label>
                    <div class="p-2 bg-muted-lt">
                        <a href="@Url.Action("Edit", "File", new { Id = file.Id })" data-toggle="fb-modal">
                            @file.FileName.TruncateString(15)
                        </a>
                    </div>
                </div>

            </div>
        }

        @Html.PagedListPager(files, page => Url.Action("Index", "MediaCategory", new { page, Model.SearchText, Model.SortBy, Model.Id }), MrCMSPagedListRenderOptions.Bootstrap4)
    }
    else
    {
        @Html.InfoBlock("", await Html.Resource("Admin Media No Files Message", "There are no files here yet - why not upload some?"))
    }
</div>